// Online C compiler to run C program online
#include <stdio.h>
#include<stdlib.h>
struct node 
{
    int data;
    struct node *link;
};
void create_list(struct node **head,int data)
{
    struct node *temp = *head;
    struct node *new_node =malloc(sizeof(struct node));
    if(new_node == NULL)
    {
        printf("Memory not allocated ");
    }
    else
    {
        new_node->data = data;
        new_node->link = NULL;
        if(*head == NULL)
        {
          *head = new_node;
            printf("node added at last succesfully:");
        }
        else
        {
        while(temp->link != NULL)
        {
            temp = temp->link;
            
        }
        temp->link = new_node;
         printf("node added at last succesfully");
        }
        
    }
}
void reverse_list(struct node **head)
{
    struct node *current = *head;
    struct node *prev = NULL;
    struct node *next = NULL;
    
    while(current != NULL)
    {
        next = current -> link;
        current->link = prev;
        prev = current;
        current = next;
    }
    *head = prev;
    printf("Reverse list is succesfull:");
}
void print_list(struct node *head)
{
    if (head == NULL)
    {
        printf("List is empty:(\n");
    }
    else
    {
        while (head != NULL)
        {
            printf("%d ", head->data);
            head = head->link;
        }
        printf("\n");
    }
}
int main() 
{
    
    struct node *head = NULL;
    int data,ch;
    while(1)
    {
        printf("\n");
    printf("1.creat_list\n2.reverse_list\n3.print_list\n");
    printf("Enter the choice: ");
    scanf("%d",&ch);
    switch(ch)
    {
        case 1:
            printf("enter the data to insert at last :");
            scanf("%d",&data);
            create_list(&head,data);
            break;
        case 2:
            reverse_list(&head);
            break;
        case 3:
            print_list(head);
            break;
    }
    }
}
