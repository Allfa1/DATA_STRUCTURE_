/* stack implimentation using array*/
#include <stdio.h>
#include<stdlib.h>
int isFull ();
void push(int);
int isEmpty();
int pop ();
void peek();
void print();

#define SIZE 30
 /*creaete a stack*/
    int stack[SIZE];
    int top = -1;
    
int main()
{
  
    int ch,data;
    while(1)
    {
        printf("1. push operation\n2. pop operation\n3. peek operation\n4. print operation\n5. exit  operation\n");
    printf("Enter a choice: ");
    scanf("%d", &ch);
    switch(ch)
    {
        case 1:
                printf("Enter the data to push: ");
                scanf("%d", &data);
                push(data);
                break;

        case 2: 
        data = pop();
        if (data != -1)
        {
            printf("poped elemt is %d\n",data);
        }
        break;
        case 3: peek();
                break;
        case 4: print();
                break;
        case 5: exit(0);
        default : printf("ERROr:Invalid Input enter a correct choice\n");
    }
        
}
}
int isFull ()
{
     return top == SIZE - 1;
}

void push(int data)
{
    if(isFull())
    {
        printf("stack is overflow\n");
    }
    else
    {
        top++;
        stack[top] = data;
        printf("pushed data is %d\n",data);
    }
}

int isEmpty()
{
    return top == -1;
}
int pop ()
{
    if(isEmpty())
    {
        printf("Stack is emty\n");
        return -1;
    }
    else
    {
        return stack[top--];
    }
}
void peek()
{
    if(isEmpty())
    {
        printf("Stack is empty\n");
    }
    else
    {
        printf("peek elemnt is %d\n",stack[top]);
    }
}

void print ()
{
    if(isEmpty())
    {
        printf("Stack is Empty\n");
    }
    else
    {
        printf("Stack elemts are: \n");
        for(int i = 0; i <= top; i++)
        {
            printf("%d\n", stack[i]);
        }
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
